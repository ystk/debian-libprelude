<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="libprelude-prelude-log">
<refmeta>
<refentrytitle role="top_of_page" id="libprelude-prelude-log.top_of_page">prelude-log</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBPRELUDE Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>prelude-log</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="libprelude-prelude-log.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
enum                <link linkend="prelude-log-t">prelude_log_t</link>;
enum                <link linkend="prelude-log-flags-t">prelude_log_flags_t</link>;
<link linkend="void">void</link>                <link linkend="prelude-log">prelude_log</link>                         (<link linkend="prelude-log-t">prelude_log_t</link> level,
                                                         const <link linkend="char">char</link> *fmt,
                                                         ...);
<link linkend="void">void</link>                <link linkend="prelude-log-debug">prelude_log_debug</link>                   (<link linkend="prelude-log-t">prelude_log_t</link> level,
                                                         const <link linkend="char">char</link> *fmt,
                                                         ...);
#define             <link linkend="prelude-log-v">prelude_log_v</link>                       (level, fmt, ap)
#define             <link linkend="prelude-log-debug-v">prelude_log_debug_v</link>                 (level, fmt, ap)
<link linkend="void">void</link>                <link linkend="prelude-log-set-level">prelude_log_set_level</link>               (<link linkend="prelude-log-t">prelude_log_t</link> level);
<link linkend="void">void</link>                <link linkend="prelude-log-set-debug-level">prelude_log_set_debug_level</link>         (<link linkend="int">int</link> level);
<link linkend="prelude-log-flags-t">prelude_log_flags_t</link>  <link linkend="prelude-log-get-flags">prelude_log_get_flags</link>              (void);
<link linkend="void">void</link>                <link linkend="prelude-log-set-flags">prelude_log_set_flags</link>               (<link linkend="prelude-log-flags-t">prelude_log_flags_t</link> flags);
<link linkend="char">char</link> *              <link linkend="prelude-log-get-prefix">prelude_log_get_prefix</link>              (void);
<link linkend="void">void</link>                <link linkend="prelude-log-set-prefix">prelude_log_set_prefix</link>              (<link linkend="char">char</link> *prefix);
<link linkend="void">void</link>                <link linkend="prelude-log-set-callback">prelude_log_set_callback</link>            ();
<link linkend="int">int</link>                 <link linkend="prelude-log-set-logfile">prelude_log_set_logfile</link>             (const <link linkend="char">char</link> *filename);
</synopsis>
</refsynopsisdiv>









<refsect1 id="libprelude-prelude-log.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>

<refsect1 id="libprelude-prelude-log.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="prelude-log-t" role="enum">
<title>enum prelude_log_t</title>
<indexterm zone="prelude-log-t"><primary sortas="prelude_log_t">prelude_log_t</primary></indexterm><programlisting>typedef enum {
        PRELUDE_LOG_CRIT  = -1,
        PRELUDE_LOG_ERR   =  0,
        PRELUDE_LOG_WARN  =  1,
        PRELUDE_LOG_INFO  =  2,
        PRELUDE_LOG_DEBUG  = 3
} prelude_log_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="prelude-log-flags-t" role="enum">
<title>enum prelude_log_flags_t</title>
<indexterm zone="prelude-log-flags-t"><primary sortas="prelude_log_flags_t">prelude_log_flags_t</primary></indexterm><programlisting>typedef enum {
        PRELUDE_LOG_FLAGS_QUIET  = 0x01, /* Drop PRELUDE_LOG_PRIORITY_INFO */
        PRELUDE_LOG_FLAGS_SYSLOG = 0x02
} prelude_log_flags_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="prelude-log" role="function">
<title>prelude_log ()</title>
<indexterm zone="prelude-log"><primary sortas="prelude_log">prelude_log</primary></indexterm><programlisting><link linkend="void">void</link>                prelude_log                         (<link linkend="prelude-log-t">prelude_log_t</link> level,
                                                         const <link linkend="char">char</link> *fmt,
                                                         ...);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>level</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fmt</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="prelude-log-debug" role="function">
<title>prelude_log_debug ()</title>
<indexterm zone="prelude-log-debug"><primary sortas="prelude_log_debug">prelude_log_debug</primary></indexterm><programlisting><link linkend="void">void</link>                prelude_log_debug                   (<link linkend="prelude-log-t">prelude_log_t</link> level,
                                                         const <link linkend="char">char</link> *fmt,
                                                         ...);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>level</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fmt</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="prelude-log-v" role="macro">
<title>prelude_log_v()</title>
<indexterm zone="prelude-log-v"><primary sortas="prelude_log_v">prelude_log_v</primary></indexterm><programlisting>#define             prelude_log_v(level, fmt, ap)</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>level</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fmt</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ap</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="prelude-log-debug-v" role="macro">
<title>prelude_log_debug_v()</title>
<indexterm zone="prelude-log-debug-v"><primary sortas="prelude_log_debug_v">prelude_log_debug_v</primary></indexterm><programlisting>#define             prelude_log_debug_v(level, fmt, ap)</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>level</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fmt</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ap</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="prelude-log-set-level" role="function">
<title>prelude_log_set_level ()</title>
<indexterm zone="prelude-log-set-level"><primary sortas="prelude_log_set_level">prelude_log_set_level</primary></indexterm><programlisting><link linkend="void">void</link>                prelude_log_set_level               (<link linkend="prelude-log-t">prelude_log_t</link> level);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>level</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="prelude-log-set-debug-level" role="function">
<title>prelude_log_set_debug_level ()</title>
<indexterm zone="prelude-log-set-debug-level"><primary sortas="prelude_log_set_debug_level">prelude_log_set_debug_level</primary></indexterm><programlisting><link linkend="void">void</link>                prelude_log_set_debug_level         (<link linkend="int">int</link> level);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>level</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="prelude-log-get-flags" role="function">
<title>prelude_log_get_flags ()</title>
<indexterm zone="prelude-log-get-flags"><primary sortas="prelude_log_get_flags">prelude_log_get_flags</primary></indexterm><programlisting><link linkend="prelude-log-flags-t">prelude_log_flags_t</link>  prelude_log_get_flags              (void);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="prelude-log-set-flags" role="function">
<title>prelude_log_set_flags ()</title>
<indexterm zone="prelude-log-set-flags"><primary sortas="prelude_log_set_flags">prelude_log_set_flags</primary></indexterm><programlisting><link linkend="void">void</link>                prelude_log_set_flags               (<link linkend="prelude-log-flags-t">prelude_log_flags_t</link> flags);</programlisting>
<para>
</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>flags</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="prelude-log-get-prefix" role="function">
<title>prelude_log_get_prefix ()</title>
<indexterm zone="prelude-log-get-prefix"><primary sortas="prelude_log_get_prefix">prelude_log_get_prefix</primary></indexterm><programlisting><link linkend="char">char</link> *              prelude_log_get_prefix              (void);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="prelude-log-set-prefix" role="function">
<title>prelude_log_set_prefix ()</title>
<indexterm zone="prelude-log-set-prefix"><primary sortas="prelude_log_set_prefix">prelude_log_set_prefix</primary></indexterm><programlisting><link linkend="void">void</link>                prelude_log_set_prefix              (<link linkend="char">char</link> *prefix);</programlisting>
<para>
Tell the Prelude standard logger to add <parameter>prefix</parameter> before logging
a line.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>prefix</parameter>&#160;:</term>
<listitem><simpara> Pointer to the prefix to use.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="prelude-log-set-callback" role="function">
<title>prelude_log_set_callback ()</title>
<indexterm zone="prelude-log-set-callback"><primary sortas="prelude_log_set_callback">prelude_log_set_callback</primary></indexterm><programlisting><link linkend="void">void</link>                prelude_log_set_callback            ();</programlisting>
<para>
@<link linkend="log-cb"><function>log_cb()</function></link> will be called in place of the prelude function usally
used for loging.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>log_cb</parameter>&#160;:</term>
<listitem><simpara> Callback function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="prelude-log-set-logfile" role="function">
<title>prelude_log_set_logfile ()</title>
<indexterm zone="prelude-log-set-logfile"><primary sortas="prelude_log_set_logfile">prelude_log_set_logfile</primary></indexterm><programlisting><link linkend="int">int</link>                 prelude_log_set_logfile             (const <link linkend="char">char</link> *filename);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>filename</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
